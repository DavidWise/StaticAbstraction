public static String CreateQualifiedName(String assemblyName, String typeName)
public static System.Reflection.Assembly GetAssembly(Type type)
public static System.Reflection.Assembly GetCallingAssembly()
public static System.Reflection.Assembly GetEntryAssembly()
public static System.Reflection.Assembly GetExecutingAssembly()
public static System.Reflection.Assembly Load(String assemblyString)
public static System.Reflection.Assembly Load(System.Reflection.AssemblyName assemblyRef)
public static System.Reflection.Assembly Load(Byte[] rawAssembly)
public static System.Reflection.Assembly Load(Byte[] rawAssembly, Byte[] rawSymbolStore)
public static System.Reflection.Assembly LoadFile(String path)
public static System.Reflection.Assembly LoadFrom(String assemblyFile)
public static System.Reflection.Assembly LoadFrom(String assemblyFile, Byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm)
public static System.Reflection.Assembly LoadWithPartialName(String partialName)
public static Boolean op_Equality(System.Reflection.Assembly left, System.Reflection.Assembly right)
public static Boolean op_Inequality(System.Reflection.Assembly left, System.Reflection.Assembly right)
public static System.Reflection.Assembly ReflectionOnlyLoad(Byte[] rawAssembly)
public static System.Reflection.Assembly ReflectionOnlyLoad(String assemblyString)
public static System.Reflection.Assembly ReflectionOnlyLoadFrom(String assemblyFile)
public static System.Reflection.Assembly UnsafeLoadFrom(String assemblyFile)
public virtual Void add_ModuleResolve(System.Reflection.ModuleResolveEventHandler value)
public Object CreateInstance(String typeName)
public Object CreateInstance(String typeName, Boolean ignoreCase)
public virtual Object CreateInstance(String typeName, Boolean ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Object[] args, System.Globalization.CultureInfo culture, Object[] activationAttributes)
public virtual Boolean Equals(Object o)
public virtual Object[] GetCustomAttributes(Boolean inherit)
public virtual Object[] GetCustomAttributes(Type attributeType, Boolean inherit)
public virtual IList<System.Reflection.CustomAttributeData> GetCustomAttributesData()
public virtual Type[] GetExportedTypes()
public virtual FileStream GetFile(String name)
public virtual FileStream[] GetFiles()
public virtual FileStream[] GetFiles(Boolean getResourceModules)
public virtual Type[] GetForwardedTypes()
public virtual Int32 GetHashCode()
public System.Reflection.Module[] GetLoadedModules()
public virtual System.Reflection.Module[] GetLoadedModules(Boolean getResourceModules)
public virtual System.Reflection.ManifestResourceInfo GetManifestResourceInfo(String resourceName)
public virtual String[] GetManifestResourceNames()
public virtual Stream GetManifestResourceStream(String name)
public virtual Stream GetManifestResourceStream(Type type, String name)
public virtual System.Reflection.Module GetModule(String name)
public System.Reflection.Module[] GetModules()
public virtual System.Reflection.Module[] GetModules(Boolean getResourceModules)
public virtual System.Reflection.AssemblyName GetName()
public virtual System.Reflection.AssemblyName GetName(Boolean copiedName)
public virtual Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
public virtual System.Reflection.AssemblyName[] GetReferencedAssemblies()
public virtual System.Reflection.Assembly GetSatelliteAssembly(System.Globalization.CultureInfo culture)
public virtual System.Reflection.Assembly GetSatelliteAssembly(System.Globalization.CultureInfo culture, Version version)
public Type GetType()
public virtual Type GetType(String name)
public virtual Type GetType(String name, Boolean throwOnError)
public virtual Type GetType(String name, Boolean throwOnError, Boolean ignoreCase)
public virtual Type[] GetTypes()
public virtual Boolean IsDefined(Type attributeType, Boolean inherit)
public System.Reflection.Module LoadModule(String moduleName, Byte[] rawModule)
public virtual System.Reflection.Module LoadModule(String moduleName, Byte[] rawModule, Byte[] rawSymbolStore)
public virtual Void remove_ModuleResolve(System.Reflection.ModuleResolveEventHandler value)
public virtual String ToString()
String CodeBase { get;  }
IEnumerable<System.Reflection.CustomAttributeData> CustomAttributes { get;  }
IEnumerable<System.Reflection.TypeInfo> DefinedTypes { get;  }
System.Reflection.MethodInfo EntryPoint { get;  }
String EscapedCodeBase { get;  }
IEnumerable<Type> ExportedTypes { get;  }
String FullName { get;  }
Boolean GlobalAssemblyCache { get;  }
Int64 HostContext { get;  }
String ImageRuntimeVersion { get;  }
Boolean IsDynamic { get;  }
Boolean IsFullyTrusted { get;  }
String Location { get;  }
System.Reflection.Module ManifestModule { get;  }
IEnumerable<System.Reflection.Module> Modules { get;  }
Boolean ReflectionOnly { get;  }
System.Security.SecurityRuleSet SecurityRuleSet { get;  }
